//Runtime: 12 ms, faster than 55.84% of C++ online submissions for Longest Substring with At Most Two Distinct Characters.
//Memory Usage: 9.9 MB, less than 85.71% of C++ online submissions for Longest Substring with At Most Two Distinct Characters.
class Solution {
public:
    int lengthOfLongestSubstringTwoDistinct(string s) {
        unordered_map<int, int> m;
        int res = 0, left = 0, i = 0;
        while (i < s.size()) {
            m[s[i]]++;
            while (m.size() > 2) {
                if (--m[s[left]] == 0)
                    m.erase(s[left]);
                left++;
            }
            res = max(res, i - left + 1);
            i++;
        }
        return res;
    }
};

Runtime: 4 ms, faster than 94.35% of C++ online submissions for Longest Substring with At Most Two Distinct Characters.
Memory Usage: 8.8 MB, less than 100.00% of C++ online submissions for Longest Substring with At Most Two Distinct Characters.
class Solution {
public:
    int lengthOfLongestSubstringTwoDistinct(string s) {
        int res = 0, cur = 0, cntLast = 0;
        char first, second;
        for (auto c : s) {
            cur = (c == first || c == second) ? cur + 1 : cntLast + 1;
            cntLast = (c == second) ? cntLast + 1 : 1;
            if (c != second) {
                first = second;
                second = c;
            }
            res = max(res, cur);
        }
        return res;
    }
};
