Runtime: 0 ms, faster than 100.00% of C++ online submissions for String to Integer (atoi).
Memory Usage: 8.2 MB, less than 100.00% of C++ online submissions for String to Integer (atoi).
class Solution {
public:
    int myAtoi(string str) {
        int i = 0, n = str.size(), sign = 1;
        long res = 0;
        while (i < n && str[i] == ' ') {
            i++;
        }
        
        
        if (str[i] == '-' || str[i] == '+') {
            sign = str[i] == '-' ? -1 : 1;
            i++;
        }
        
        while (str[i] <= '9' && str[i] >= '0') {
            res = res * 10 + str[i] - '0';
            if (sign  == 1 && res >= INT_MAX)
                return INT_MAX;
            else if (sign == -1 && res > INT_MAX )
                return INT_MIN;
            i++;
        }
        return sign * res;
    }
};

class Solution {
public:
    int myAtoi(string str) {
        int i = 0, n = str.size(), sign = 1;
        int res = 0;
        while (i < n && str[i] == ' ') {
            i++;
        }
        
        
        if (str[i] == '-' || str[i] == '+') {
            sign = str[i] == '-' ? -1 : 1;
            i++;
        }
        
        while (str[i] <= '9' && str[i] >= '0') {
            if (res > INT_MAX / 10 || (res == INT_MAX / 10 && str[i] - '0' > 7))
                return (sign == 1) ? INT_MAX : INT_MIN;
            //cout<<res<<" "<<str[i] - '0'<<endl;
            res = res * 10 +( str[i] - '0');
            /*if (sign  == 1 && res >= INT_MAX)
                return INT_MAX;
            else if (sign == -1 && res > INT_MAX )
                return INT_MIN;*/
            i++;
        }
        return sign * res;
    }
};


